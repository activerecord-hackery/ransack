# This file is generated by the templates/template.rb script and should not be
# modified manually. See templates/sig/prism/mutation_compiler.rbs.erb
# if you are looking to modify the template

module Prism
  class MutationCompiler < Compiler
    def visit_alias_global_variable_node: (AliasGlobalVariableNode) -> node?
    def visit_alias_method_node: (AliasMethodNode) -> node?
    def visit_alternation_pattern_node: (AlternationPatternNode) -> node?
    def visit_and_node: (AndNode) -> node?
    def visit_arguments_node: (ArgumentsNode) -> node?
    def visit_array_node: (ArrayNode) -> node?
    def visit_array_pattern_node: (ArrayPatternNode) -> node?
    def visit_assoc_node: (AssocNode) -> node?
    def visit_assoc_splat_node: (AssocSplatNode) -> node?
    def visit_back_reference_read_node: (BackReferenceReadNode) -> node?
    def visit_begin_node: (BeginNode) -> node?
    def visit_block_argument_node: (BlockArgumentNode) -> node?
    def visit_block_local_variable_node: (BlockLocalVariableNode) -> node?
    def visit_block_node: (BlockNode) -> node?
    def visit_block_parameter_node: (BlockParameterNode) -> node?
    def visit_block_parameters_node: (BlockParametersNode) -> node?
    def visit_break_node: (BreakNode) -> node?
    def visit_call_and_write_node: (CallAndWriteNode) -> node?
    def visit_call_node: (CallNode) -> node?
    def visit_call_operator_write_node: (CallOperatorWriteNode) -> node?
    def visit_call_or_write_node: (CallOrWriteNode) -> node?
    def visit_call_target_node: (CallTargetNode) -> node?
    def visit_capture_pattern_node: (CapturePatternNode) -> node?
    def visit_case_match_node: (CaseMatchNode) -> node?
    def visit_case_node: (CaseNode) -> node?
    def visit_class_node: (ClassNode) -> node?
    def visit_class_variable_and_write_node: (ClassVariableAndWriteNode) -> node?
    def visit_class_variable_operator_write_node: (ClassVariableOperatorWriteNode) -> node?
    def visit_class_variable_or_write_node: (ClassVariableOrWriteNode) -> node?
    def visit_class_variable_read_node: (ClassVariableReadNode) -> node?
    def visit_class_variable_target_node: (ClassVariableTargetNode) -> node?
    def visit_class_variable_write_node: (ClassVariableWriteNode) -> node?
    def visit_constant_and_write_node: (ConstantAndWriteNode) -> node?
    def visit_constant_operator_write_node: (ConstantOperatorWriteNode) -> node?
    def visit_constant_or_write_node: (ConstantOrWriteNode) -> node?
    def visit_constant_path_and_write_node: (ConstantPathAndWriteNode) -> node?
    def visit_constant_path_node: (ConstantPathNode) -> node?
    def visit_constant_path_operator_write_node: (ConstantPathOperatorWriteNode) -> node?
    def visit_constant_path_or_write_node: (ConstantPathOrWriteNode) -> node?
    def visit_constant_path_target_node: (ConstantPathTargetNode) -> node?
    def visit_constant_path_write_node: (ConstantPathWriteNode) -> node?
    def visit_constant_read_node: (ConstantReadNode) -> node?
    def visit_constant_target_node: (ConstantTargetNode) -> node?
    def visit_constant_write_node: (ConstantWriteNode) -> node?
    def visit_def_node: (DefNode) -> node?
    def visit_defined_node: (DefinedNode) -> node?
    def visit_else_node: (ElseNode) -> node?
    def visit_embedded_statements_node: (EmbeddedStatementsNode) -> node?
    def visit_embedded_variable_node: (EmbeddedVariableNode) -> node?
    def visit_ensure_node: (EnsureNode) -> node?
    def visit_false_node: (FalseNode) -> node?
    def visit_find_pattern_node: (FindPatternNode) -> node?
    def visit_flip_flop_node: (FlipFlopNode) -> node?
    def visit_float_node: (FloatNode) -> node?
    def visit_for_node: (ForNode) -> node?
    def visit_forwarding_arguments_node: (ForwardingArgumentsNode) -> node?
    def visit_forwarding_parameter_node: (ForwardingParameterNode) -> node?
    def visit_forwarding_super_node: (ForwardingSuperNode) -> node?
    def visit_global_variable_and_write_node: (GlobalVariableAndWriteNode) -> node?
    def visit_global_variable_operator_write_node: (GlobalVariableOperatorWriteNode) -> node?
    def visit_global_variable_or_write_node: (GlobalVariableOrWriteNode) -> node?
    def visit_global_variable_read_node: (GlobalVariableReadNode) -> node?
    def visit_global_variable_target_node: (GlobalVariableTargetNode) -> node?
    def visit_global_variable_write_node: (GlobalVariableWriteNode) -> node?
    def visit_hash_node: (HashNode) -> node?
    def visit_hash_pattern_node: (HashPatternNode) -> node?
    def visit_if_node: (IfNode) -> node?
    def visit_imaginary_node: (ImaginaryNode) -> node?
    def visit_implicit_node: (ImplicitNode) -> node?
    def visit_implicit_rest_node: (ImplicitRestNode) -> node?
    def visit_in_node: (InNode) -> node?
    def visit_index_and_write_node: (IndexAndWriteNode) -> node?
    def visit_index_operator_write_node: (IndexOperatorWriteNode) -> node?
    def visit_index_or_write_node: (IndexOrWriteNode) -> node?
    def visit_index_target_node: (IndexTargetNode) -> node?
    def visit_instance_variable_and_write_node: (InstanceVariableAndWriteNode) -> node?
    def visit_instance_variable_operator_write_node: (InstanceVariableOperatorWriteNode) -> node?
    def visit_instance_variable_or_write_node: (InstanceVariableOrWriteNode) -> node?
    def visit_instance_variable_read_node: (InstanceVariableReadNode) -> node?
    def visit_instance_variable_target_node: (InstanceVariableTargetNode) -> node?
    def visit_instance_variable_write_node: (InstanceVariableWriteNode) -> node?
    def visit_integer_node: (IntegerNode) -> node?
    def visit_interpolated_match_last_line_node: (InterpolatedMatchLastLineNode) -> node?
    def visit_interpolated_regular_expression_node: (InterpolatedRegularExpressionNode) -> node?
    def visit_interpolated_string_node: (InterpolatedStringNode) -> node?
    def visit_interpolated_symbol_node: (InterpolatedSymbolNode) -> node?
    def visit_interpolated_x_string_node: (InterpolatedXStringNode) -> node?
    def visit_it_local_variable_read_node: (ItLocalVariableReadNode) -> node?
    def visit_it_parameters_node: (ItParametersNode) -> node?
    def visit_keyword_hash_node: (KeywordHashNode) -> node?
    def visit_keyword_rest_parameter_node: (KeywordRestParameterNode) -> node?
    def visit_lambda_node: (LambdaNode) -> node?
    def visit_local_variable_and_write_node: (LocalVariableAndWriteNode) -> node?
    def visit_local_variable_operator_write_node: (LocalVariableOperatorWriteNode) -> node?
    def visit_local_variable_or_write_node: (LocalVariableOrWriteNode) -> node?
    def visit_local_variable_read_node: (LocalVariableReadNode) -> node?
    def visit_local_variable_target_node: (LocalVariableTargetNode) -> node?
    def visit_local_variable_write_node: (LocalVariableWriteNode) -> node?
    def visit_match_last_line_node: (MatchLastLineNode) -> node?
    def visit_match_predicate_node: (MatchPredicateNode) -> node?
    def visit_match_required_node: (MatchRequiredNode) -> node?
    def visit_match_write_node: (MatchWriteNode) -> node?
    def visit_missing_node: (MissingNode) -> node?
    def visit_module_node: (ModuleNode) -> node?
    def visit_multi_target_node: (MultiTargetNode) -> node?
    def visit_multi_write_node: (MultiWriteNode) -> node?
    def visit_next_node: (NextNode) -> node?
    def visit_nil_node: (NilNode) -> node?
    def visit_no_keywords_parameter_node: (NoKeywordsParameterNode) -> node?
    def visit_numbered_parameters_node: (NumberedParametersNode) -> node?
    def visit_numbered_reference_read_node: (NumberedReferenceReadNode) -> node?
    def visit_optional_keyword_parameter_node: (OptionalKeywordParameterNode) -> node?
    def visit_optional_parameter_node: (OptionalParameterNode) -> node?
    def visit_or_node: (OrNode) -> node?
    def visit_parameters_node: (ParametersNode) -> node?
    def visit_parentheses_node: (ParenthesesNode) -> node?
    def visit_pinned_expression_node: (PinnedExpressionNode) -> node?
    def visit_pinned_variable_node: (PinnedVariableNode) -> node?
    def visit_post_execution_node: (PostExecutionNode) -> node?
    def visit_pre_execution_node: (PreExecutionNode) -> node?
    def visit_program_node: (ProgramNode) -> node?
    def visit_range_node: (RangeNode) -> node?
    def visit_rational_node: (RationalNode) -> node?
    def visit_redo_node: (RedoNode) -> node?
    def visit_regular_expression_node: (RegularExpressionNode) -> node?
    def visit_required_keyword_parameter_node: (RequiredKeywordParameterNode) -> node?
    def visit_required_parameter_node: (RequiredParameterNode) -> node?
    def visit_rescue_modifier_node: (RescueModifierNode) -> node?
    def visit_rescue_node: (RescueNode) -> node?
    def visit_rest_parameter_node: (RestParameterNode) -> node?
    def visit_retry_node: (RetryNode) -> node?
    def visit_return_node: (ReturnNode) -> node?
    def visit_self_node: (SelfNode) -> node?
    def visit_shareable_constant_node: (ShareableConstantNode) -> node?
    def visit_singleton_class_node: (SingletonClassNode) -> node?
    def visit_source_encoding_node: (SourceEncodingNode) -> node?
    def visit_source_file_node: (SourceFileNode) -> node?
    def visit_source_line_node: (SourceLineNode) -> node?
    def visit_splat_node: (SplatNode) -> node?
    def visit_statements_node: (StatementsNode) -> node?
    def visit_string_node: (StringNode) -> node?
    def visit_super_node: (SuperNode) -> node?
    def visit_symbol_node: (SymbolNode) -> node?
    def visit_true_node: (TrueNode) -> node?
    def visit_undef_node: (UndefNode) -> node?
    def visit_unless_node: (UnlessNode) -> node?
    def visit_until_node: (UntilNode) -> node?
    def visit_when_node: (WhenNode) -> node?
    def visit_while_node: (WhileNode) -> node?
    def visit_x_string_node: (XStringNode) -> node?
    def visit_yield_node: (YieldNode) -> node?
  end
end
