# This file is generated by the templates/template.rb script and should not be
# modified manually. See templates/sig/prism/visitor.rbs.erb
# if you are looking to modify the template

module Prism
  class BasicVisitor
    def visit: (Prism::node?) -> void
    def visit_all: (Array[Prism::node?]) -> void
    def visit_child_nodes: (Prism::node) -> void
  end

  interface _Visitor
    def visit_alias_global_variable_node: (AliasGlobalVariableNode) -> void
    def visit_alias_method_node: (AliasMethodNode) -> void
    def visit_alternation_pattern_node: (AlternationPatternNode) -> void
    def visit_and_node: (AndNode) -> void
    def visit_arguments_node: (ArgumentsNode) -> void
    def visit_array_node: (ArrayNode) -> void
    def visit_array_pattern_node: (ArrayPatternNode) -> void
    def visit_assoc_node: (AssocNode) -> void
    def visit_assoc_splat_node: (AssocSplatNode) -> void
    def visit_back_reference_read_node: (BackReferenceReadNode) -> void
    def visit_begin_node: (BeginNode) -> void
    def visit_block_argument_node: (BlockArgumentNode) -> void
    def visit_block_local_variable_node: (BlockLocalVariableNode) -> void
    def visit_block_node: (BlockNode) -> void
    def visit_block_parameter_node: (BlockParameterNode) -> void
    def visit_block_parameters_node: (BlockParametersNode) -> void
    def visit_break_node: (BreakNode) -> void
    def visit_call_and_write_node: (CallAndWriteNode) -> void
    def visit_call_node: (CallNode) -> void
    def visit_call_operator_write_node: (CallOperatorWriteNode) -> void
    def visit_call_or_write_node: (CallOrWriteNode) -> void
    def visit_call_target_node: (CallTargetNode) -> void
    def visit_capture_pattern_node: (CapturePatternNode) -> void
    def visit_case_match_node: (CaseMatchNode) -> void
    def visit_case_node: (CaseNode) -> void
    def visit_class_node: (ClassNode) -> void
    def visit_class_variable_and_write_node: (ClassVariableAndWriteNode) -> void
    def visit_class_variable_operator_write_node: (ClassVariableOperatorWriteNode) -> void
    def visit_class_variable_or_write_node: (ClassVariableOrWriteNode) -> void
    def visit_class_variable_read_node: (ClassVariableReadNode) -> void
    def visit_class_variable_target_node: (ClassVariableTargetNode) -> void
    def visit_class_variable_write_node: (ClassVariableWriteNode) -> void
    def visit_constant_and_write_node: (ConstantAndWriteNode) -> void
    def visit_constant_operator_write_node: (ConstantOperatorWriteNode) -> void
    def visit_constant_or_write_node: (ConstantOrWriteNode) -> void
    def visit_constant_path_and_write_node: (ConstantPathAndWriteNode) -> void
    def visit_constant_path_node: (ConstantPathNode) -> void
    def visit_constant_path_operator_write_node: (ConstantPathOperatorWriteNode) -> void
    def visit_constant_path_or_write_node: (ConstantPathOrWriteNode) -> void
    def visit_constant_path_target_node: (ConstantPathTargetNode) -> void
    def visit_constant_path_write_node: (ConstantPathWriteNode) -> void
    def visit_constant_read_node: (ConstantReadNode) -> void
    def visit_constant_target_node: (ConstantTargetNode) -> void
    def visit_constant_write_node: (ConstantWriteNode) -> void
    def visit_def_node: (DefNode) -> void
    def visit_defined_node: (DefinedNode) -> void
    def visit_else_node: (ElseNode) -> void
    def visit_embedded_statements_node: (EmbeddedStatementsNode) -> void
    def visit_embedded_variable_node: (EmbeddedVariableNode) -> void
    def visit_ensure_node: (EnsureNode) -> void
    def visit_false_node: (FalseNode) -> void
    def visit_find_pattern_node: (FindPatternNode) -> void
    def visit_flip_flop_node: (FlipFlopNode) -> void
    def visit_float_node: (FloatNode) -> void
    def visit_for_node: (ForNode) -> void
    def visit_forwarding_arguments_node: (ForwardingArgumentsNode) -> void
    def visit_forwarding_parameter_node: (ForwardingParameterNode) -> void
    def visit_forwarding_super_node: (ForwardingSuperNode) -> void
    def visit_global_variable_and_write_node: (GlobalVariableAndWriteNode) -> void
    def visit_global_variable_operator_write_node: (GlobalVariableOperatorWriteNode) -> void
    def visit_global_variable_or_write_node: (GlobalVariableOrWriteNode) -> void
    def visit_global_variable_read_node: (GlobalVariableReadNode) -> void
    def visit_global_variable_target_node: (GlobalVariableTargetNode) -> void
    def visit_global_variable_write_node: (GlobalVariableWriteNode) -> void
    def visit_hash_node: (HashNode) -> void
    def visit_hash_pattern_node: (HashPatternNode) -> void
    def visit_if_node: (IfNode) -> void
    def visit_imaginary_node: (ImaginaryNode) -> void
    def visit_implicit_node: (ImplicitNode) -> void
    def visit_implicit_rest_node: (ImplicitRestNode) -> void
    def visit_in_node: (InNode) -> void
    def visit_index_and_write_node: (IndexAndWriteNode) -> void
    def visit_index_operator_write_node: (IndexOperatorWriteNode) -> void
    def visit_index_or_write_node: (IndexOrWriteNode) -> void
    def visit_index_target_node: (IndexTargetNode) -> void
    def visit_instance_variable_and_write_node: (InstanceVariableAndWriteNode) -> void
    def visit_instance_variable_operator_write_node: (InstanceVariableOperatorWriteNode) -> void
    def visit_instance_variable_or_write_node: (InstanceVariableOrWriteNode) -> void
    def visit_instance_variable_read_node: (InstanceVariableReadNode) -> void
    def visit_instance_variable_target_node: (InstanceVariableTargetNode) -> void
    def visit_instance_variable_write_node: (InstanceVariableWriteNode) -> void
    def visit_integer_node: (IntegerNode) -> void
    def visit_interpolated_match_last_line_node: (InterpolatedMatchLastLineNode) -> void
    def visit_interpolated_regular_expression_node: (InterpolatedRegularExpressionNode) -> void
    def visit_interpolated_string_node: (InterpolatedStringNode) -> void
    def visit_interpolated_symbol_node: (InterpolatedSymbolNode) -> void
    def visit_interpolated_x_string_node: (InterpolatedXStringNode) -> void
    def visit_it_local_variable_read_node: (ItLocalVariableReadNode) -> void
    def visit_it_parameters_node: (ItParametersNode) -> void
    def visit_keyword_hash_node: (KeywordHashNode) -> void
    def visit_keyword_rest_parameter_node: (KeywordRestParameterNode) -> void
    def visit_lambda_node: (LambdaNode) -> void
    def visit_local_variable_and_write_node: (LocalVariableAndWriteNode) -> void
    def visit_local_variable_operator_write_node: (LocalVariableOperatorWriteNode) -> void
    def visit_local_variable_or_write_node: (LocalVariableOrWriteNode) -> void
    def visit_local_variable_read_node: (LocalVariableReadNode) -> void
    def visit_local_variable_target_node: (LocalVariableTargetNode) -> void
    def visit_local_variable_write_node: (LocalVariableWriteNode) -> void
    def visit_match_last_line_node: (MatchLastLineNode) -> void
    def visit_match_predicate_node: (MatchPredicateNode) -> void
    def visit_match_required_node: (MatchRequiredNode) -> void
    def visit_match_write_node: (MatchWriteNode) -> void
    def visit_missing_node: (MissingNode) -> void
    def visit_module_node: (ModuleNode) -> void
    def visit_multi_target_node: (MultiTargetNode) -> void
    def visit_multi_write_node: (MultiWriteNode) -> void
    def visit_next_node: (NextNode) -> void
    def visit_nil_node: (NilNode) -> void
    def visit_no_keywords_parameter_node: (NoKeywordsParameterNode) -> void
    def visit_numbered_parameters_node: (NumberedParametersNode) -> void
    def visit_numbered_reference_read_node: (NumberedReferenceReadNode) -> void
    def visit_optional_keyword_parameter_node: (OptionalKeywordParameterNode) -> void
    def visit_optional_parameter_node: (OptionalParameterNode) -> void
    def visit_or_node: (OrNode) -> void
    def visit_parameters_node: (ParametersNode) -> void
    def visit_parentheses_node: (ParenthesesNode) -> void
    def visit_pinned_expression_node: (PinnedExpressionNode) -> void
    def visit_pinned_variable_node: (PinnedVariableNode) -> void
    def visit_post_execution_node: (PostExecutionNode) -> void
    def visit_pre_execution_node: (PreExecutionNode) -> void
    def visit_program_node: (ProgramNode) -> void
    def visit_range_node: (RangeNode) -> void
    def visit_rational_node: (RationalNode) -> void
    def visit_redo_node: (RedoNode) -> void
    def visit_regular_expression_node: (RegularExpressionNode) -> void
    def visit_required_keyword_parameter_node: (RequiredKeywordParameterNode) -> void
    def visit_required_parameter_node: (RequiredParameterNode) -> void
    def visit_rescue_modifier_node: (RescueModifierNode) -> void
    def visit_rescue_node: (RescueNode) -> void
    def visit_rest_parameter_node: (RestParameterNode) -> void
    def visit_retry_node: (RetryNode) -> void
    def visit_return_node: (ReturnNode) -> void
    def visit_self_node: (SelfNode) -> void
    def visit_shareable_constant_node: (ShareableConstantNode) -> void
    def visit_singleton_class_node: (SingletonClassNode) -> void
    def visit_source_encoding_node: (SourceEncodingNode) -> void
    def visit_source_file_node: (SourceFileNode) -> void
    def visit_source_line_node: (SourceLineNode) -> void
    def visit_splat_node: (SplatNode) -> void
    def visit_statements_node: (StatementsNode) -> void
    def visit_string_node: (StringNode) -> void
    def visit_super_node: (SuperNode) -> void
    def visit_symbol_node: (SymbolNode) -> void
    def visit_true_node: (TrueNode) -> void
    def visit_undef_node: (UndefNode) -> void
    def visit_unless_node: (UnlessNode) -> void
    def visit_until_node: (UntilNode) -> void
    def visit_when_node: (WhenNode) -> void
    def visit_while_node: (WhileNode) -> void
    def visit_x_string_node: (XStringNode) -> void
    def visit_yield_node: (YieldNode) -> void
  end

  class Visitor < BasicVisitor
    include _Visitor
  end
end
